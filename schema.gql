# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type APODResponse {
  copyright: String!
  date: String!
  explanation: String!
  hdurl: String!
  media_type: String!
  service_version: String!
  title: String!
  url: String!
}

type Asset {
  id: String!
  date: String!
}

type AssetsResponse {
  count: Float!
  results: [Asset!]!
}

type EarthQuery {
  imagery(lon: Float!, lat: Float!, date: String!, cloud_score: Boolean!): ImageryResponse!
  assets(lon: Float!, lat: Float!, begin: String!): AssetsResponse!
}

type ImageryResponse {
  cloud_score: Float!
  date: String!
  id: String!
  service_version: String!
  url: String!
}

type MarsPhotosQuery {
  rovers(version: String = "v1"): RoversQuery!
}

type NASAQuery {
  planetary: PlanetaryQuery!
  marsPhotos: MarsPhotosQuery!
  neo(version: String = "v1"): NeoQuery!
}

type NeoBrowseResponse {
  near_earth_objects: [NEOObject!]!
}

type NeoFeedResponse {
  element_count: Float!
}

type NEOObject {
  neo_reference_id: String!
  name: String!
}

type NeoQuery {
  feed: NeoFeedResponse!
  neo(id: Int!): NeoResponse!
  browse: NeoBrowseResponse!
}

type NeoResponse {
  id: String!
  neo_reference_id: String!
  name: String!
  sandbox: String!
}

type Photo {
  id: Float!
  sol: Float!
  img_src: String!
}

type Photo2 {
  id: Float!
  sol: Float!
  img_src: String!
}

type PhotosResponse {
  photos: [Photo!]!
}

type PhotosResponse2 {
  photos: [Photo2!]!
}

type PlanetaryQuery {
  apod(date: String, hd: Boolean): APODResponse!
  earth: EarthQuery!
}

type Query {
  NASA(key: String!): NASAQuery
}

type RoverQuery {
  photos(sol: Float, earth_date: String, page: Float = 1, camera: String): PhotosResponse2!
}

type RoversQuery {
  photos(sol: Float!, roverName: String!): PhotosResponse!
  rover(roverName: String!): RoverQuery!
}
